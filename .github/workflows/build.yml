name: Build

on:
  push:
    branches: [ main, ci ]
  pull_request:
    branches: [ main, ci ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3
    
    - name: Dependences
      env:
        DOWNLOAD_DIR: '/opt/'
        DPDK_FILE_NAME: 'dpdk-21.11.1.tar.xz'
        DPDK_URL: 'https://fast.dpdk.org/rel/'
        PIP_DEPENDENCIES: 'meson ninja pyelftools'
      run: |
        sudo apt-get -y install python3 python3-pip
        sudo pip3 install $PIP_DEPENDENCIES
        sudo mkdir -p $DOWNLOAD_DIR
        sudo cd $DOWNLOAD_DIR
        sudo wget $DPDK_URL$DPDK_FILE_NAME
        sudo tar xJf $DPDK_FILE_NAME
        sudo cd dpdk-*/
        sudo meson build
        sudo cd build
        sudo ninja
        sudo ninja install
        sudo echo "/usr/local/lib" >> /etc/ld.so.conf.d/libc.conf
        sudo echo "/usr/local/lib64" >> /etc/ld.so.conf.d/libc.conf
        sudo ldconfig
        sudo pkg-config --exists libdpdk

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cd ${{github.workspace}} && cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    # - name: Test
      # working-directory: ${{github.workspace}}/build
      ## Execute tests defined by the CMake configuration.  
      ## See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      # run: ctest -C ${{env.BUILD_TYPE}}
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        # Artifact name
        name: smart_offload # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: |
          ${{github.workspace}}
          !${{github.workspace}}/build
        # The desired behavior if no files are found using the provided path.
        # Available Options:
        # warn: Output a warning but do not fail the action
        # error: Fail the action with an error message
        # ignore: Do not output any warnings or errors, the action does not fail

        if-no-files-found: error
        # Duration after which artifact will expire in days. 0 means using default retention.
        # Minimum 1 day. Maximum 90 days unless changed from the repository settings page.

        # retention-days: # optional
      
